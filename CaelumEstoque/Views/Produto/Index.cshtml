@model IList<CaelumEstoque.Models.Produto>



<table class="table table-hover">
    <thead>
        <!-- cabeçalho -->
        <tr>
            <th>Id</th> <!-- colunas dessa tabela -->
            <th>Nome do Produto</th>
            <th>Preco</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <!-- corpo da tabela -->
        @foreach (var produto in Model) // foreach dentro de um html o @ significa que estou declarando um metodo do .net , a model é tipada lá em cima..
        {
            <tr>
                <td>
                    @produto.Id
                </td> <!-- cada produto da tabela definida no DAO-->
                <td>
                    @Html.RouteLink(produto.Nome, "VisualizaProduto", new { id = produto.Id }) <!-- se o nome da action mudar, então uso o routelink-->
                    @Html.ActionLink(produto.Nome, "Visualiza", new { id = produto.Id }) <!-- o terceiror parametro é qual eu informo na url pro servidor  coomo propriedade-->
                </td> <!-- nesse conceito o ARROBA' recupera o valor do produto id, nome e preco e não o texto. produto.ID-->
                <td id="quantidade@(produto.Id)">
                    @produto.Quantidade
                </td>
                <td>
                    <a href=# onclick="decrementa(@produto.Id);"> Decrementar </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>

<script type="text/javascript">
    function decrementa(produtoId) {
        // req. assincrona ajax
        var url = "@Url.Action("DecrementaQtd","Produto")"; // Action/Controller
        $.post(url, { id: produtoId }, atualiza) // manda pro decrementa do servidor..
    }

    function atualiza(reposta) {
        $("#quantidade" + reposta.Id).html(resposta.Quantidade);
    }
</script>
